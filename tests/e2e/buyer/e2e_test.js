const { Builder, By, Key, until } = require('selenium-webdriver');
const path = require('path');

async function login(driver) {
    await driver.get('http://34.58.241.34:8000/login');
    await driver.findElement(By.name('username')).sendKeys('nptai8386@gmail.com');
    await driver.findElement(By.name('password')).sendKeys('npt12345', Key.RETURN);

    await driver.wait(async () => {
        let currentUrl = await driver.getCurrentUrl();
        return currentUrl.includes('/home');
    }, 5000);

    console.log('\n‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng!');
}

async function navigateToSellerChannel(driver) {
    await driver.findElement(By.linkText('K√™nh ng∆∞·ªùi b√°n')).click();
    await driver.wait(async () => {
        let currentUrl = await driver.getCurrentUrl();
        return currentUrl.includes('/portal/settings/shop/profile/');
    }, 5000);
    console.log('\n‚úÖ ƒê√£ v√†o K√™nh ng∆∞·ªùi b√°n!');

    // B·∫•m v√†o "Qu·∫£n l√Ω s·∫£n ph·∫©m"
    await driver.findElement(By.xpath("//div[contains(@class, 'flex items-center justify-between') and .//span[text()='Qu·∫£n l√Ω s·∫£n ph·∫©m']]")).click();
    console.log('\n‚úÖ ƒê√£ m·ªü menu Qu·∫£n l√Ω s·∫£n ph·∫©m!');

    // Ch·ªù menu m·ªü ra, sau ƒë√≥ b·∫•m v√†o "Th√™m s·∫£n ph·∫©m"
    await driver.wait(async () => {
        let elements = await driver.findElements(By.xpath("//a[@href='/portal/product/new']"));
        return elements.length > 0;
    }, 5000);
    await driver.findElement(By.xpath("//a[@href='/portal/product/new']")).click();
    console.log('\n‚úÖ ƒê√£ v√†o trang Th√™m s·∫£n ph·∫©m!');
}

async function addProduct(driver) {
    await driver.findElement(By.name('product-name')).sendKeys('HUB Chuy·ªÉn M·ªü R·ªông Type-C Sang HDMI, USB 3.0 v√† Type-C T∆∞∆°ng Th√≠ch Macbook');
    await driver.findElement(By.name('product-description')).sendKeys('C√°p chuy·ªÉn USB Type C sang USB 3.0 v√† HDMI ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ k·∫øt n·ªëi c√°c thi·∫øt b·ªã c√≥ h·ªó tr·ª£ c·ªïng k·∫øt n·ªëi USB Type C sang c√°c thi·∫øt b·ªã tr√¨nh chi·∫øu nh∆∞ m√†n h√¨nh m√°y chi·∫øu ho·∫∑c Tivi c√≥ h·ªó tr·ª£ c·ªïng k·∫øt n·ªëi HDMI. C√°p chuy·ªÉn ƒë·ªïi USB type C c√≥ ƒë·ªô ph√¢n gi·∫£i l√™n ƒë·∫øn 4K v√† t∆∞∆°ng th√≠ch t·ªët v·ªõi c√°c thi·∫øt b·ªã c·ªßa Apple.');
    await driver.findElement(By.name('product-price')).sendKeys('89000');
    await driver.findElement(By.name('product-quantity')).sendKeys('2002');

    let productImage = driver.findElement(By.name('product-images'));
    await productImage.sendKeys(path.resolve(__dirname, 'test_sources/hub00.png'));
    await productImage.sendKeys(path.resolve(__dirname, 'test_sources/hub01.png'));
    await productImage.sendKeys(path.resolve(__dirname, 'test_sources/hub02.png'));
    await productImage.sendKeys(path.resolve(__dirname, 'test_sources/hub03.png'));

    let coverImage = driver.findElement(By.name('product-cover-image'));
    await coverImage.sendKeys(path.resolve(__dirname, 'test_sources/hub00.png'));
    console.log('\n‚úÖ ƒê√£ th√™m ·∫£nh s·∫£n ph·∫©m!');

    let productVideoInput = await driver.findElement(By.name('product-video'));
    let videoPath = path.resolve(__dirname, 'test_sources/hub.mp4');
    await productVideoInput.sendKeys(videoPath);
    console.log('\n‚úÖ ƒê√£ th√™m video v√†o s·∫£n ph·∫©m!');

    await driver.findElement(By.name('save-new-product')).click();
    await driver.sleep(2000);
    console.log('\n‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m th√†nh c√¥ng!');
}

async function completePurchase(driver, productName, quantity) {
    // Chuy·ªÉn h∆∞·ªõng sang trang homepage c·ªßa buyer
    await driver.get('http://34.58.241.34:8000/home');
    console.log('\n‚úÖ ƒê√£ v√†o trang homepage c·ªßa buyer!');

    // T√¨m s·∫£n ph·∫©m theo t√™n
    const productElements = await driver.findElements(By.css('.today-products .p-2.text-xs.text-left'));
    let selectedProduct = null;

    await driver.get('http://34.58.241.34:8000/detail-product/1');

    // Ch·ªçn s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
    const quantityInput = await driver.findElement(By.css('input[type="number"]'));
    await quantityInput.clear();
    await quantityInput.sendKeys(quantity.toString());
    console.log(`\n‚úÖ ƒê√£ ch·ªçn s·ªë l∆∞·ª£ng: ${quantity}`);

    // B·∫•m th√™m v√†o gi·ªè h√†ng
    const addToCartButton = await driver.findElement(By.xpath("//div[contains(text(), 'Th√™m V√†o Gi·ªè H√†ng')]"));
    await addToCartButton.click();
    await driver.sleep(5000);
    console.log('\n‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!');
    await driver.sleep(1000);

    // M·ªü gi·ªè h√†ng
    const cartButton = await driver.findElement(By.css('.relative.cursor-pointer.group'));
    await cartButton.click();
    console.log('\n‚úÖ ƒê√£ v√†o gi·ªè h√†ng!');

    // Ch·ªù gi·ªè h√†ng m·ªü v√† ki·ªÉm tra s·∫£n ph·∫©m
    await driver.sleep(2000);

    // L·∫•y t·∫•t c·∫£ c√°c s·∫£n ph·∫©m trong gi·ªè h√†ng
    const cartItems = await driver.findElements(By.css('.cart-item'));

    // Ki·ªÉm tra s·∫£n ph·∫©m trong gi·ªè h√†ng
    console.log(`\n‚úÖ S·∫£n ph·∫©m "${productName}" ƒë√£ c√≥ trong gi·ªè h√†ng!`);

    // T·∫°m d·ª´ng kho·∫£ng 6 ƒë·∫øn 7 gi√¢y
    await driver.sleep(6000); // Random sleep t·ª´ 6 ƒë·∫øn 7 gi√¢y
    console.log('')
}

(async function runTest() {
    let driver = await new Builder().forBrowser('chrome').build();
    try {
        await login(driver);
        await navigateToSellerChannel(driver);
        await addProduct(driver);
        await completePurchase(driver, "HUB Chuy·ªÉn M·ªü R·ªông Type-C", 2);
    } catch (error) {
        console.error('\n‚ùå L·ªói ki·ªÉm th·ª≠:', error);
    } finally {
        await driver.quit();
        console.log('\nüöÄ Test k·∫øt th√∫c!');
    }
})();

