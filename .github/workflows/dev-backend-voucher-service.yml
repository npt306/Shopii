name: Test, Build, and Deploy backend voucher service

on:
  push:
    # paths-ignore:
    #   - '.github/**'
    paths:
      - 'backend/voucher-service/**'
      - '.github/workflows/dev-backend-voucher-service.yml'
    branches:
      - main
  workflow_dispatch:

jobs:
  # --- Test Job ---
  test:
    name: Run Unit Tests & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run unit tests and coverage
        run: |
          echo "Running tests for voucher-service..."
          docker run --rm \
            -v ${{ github.workspace }}/backend/voucher-service:/usr/src/app \
            node:20 /bin/sh -c "cd /usr/src/app && npm install --legacy-peer-deps && npm run test:cov"
          echo "Tests completed successfully."

  # --- Build Job ---
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./backend/voucher-service
          file: ./backend/voucher-service/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend-voucher-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # --- Deploy Job ---
  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USERNAME }}
          key: ${{ secrets.GCE_SSH_KEY }}
          script: |
            echo "Starting deployment for backend-voucher-service..."
            docker stop backend-voucher-service || echo "Container not running."
            docker rm backend-voucher-service || echo "Container not found."
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/backend-voucher-service:latest || echo "Image not found locally."
            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend-voucher-service:latest
            echo "Running new container..."
            docker run -d --name backend-voucher-service -p 3002:3002 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e PORT=3002 \
            ${{ secrets.DOCKERHUB_USERNAME }}/backend-voucher-service:latest
            echo "Deployment finished."